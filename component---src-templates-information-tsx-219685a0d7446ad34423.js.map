{"version":3,"file":"component---src-templates-information-tsx-219685a0d7446ad34423.js","mappings":"6JAkFA,IAAMA,EAAQ,YAmBd,IA3FA,YAAoC,IAC9BC,EAD6B,IAApBC,KAGb,YAHiC,MAAb,GAAa,GAI/B,IAAK,WACHD,EAAO,cACP,MACF,IAAK,eACHA,EAAO,qBACP,MACF,IAAK,UACHA,EAAO,UACP,MACF,QACEA,EAAO,UAIX,OACE,gBAAC,EAAAE,YAAD,CACEC,MAAOJ,EACPK,OAAQ,SAACC,GACP,MAA2BA,EAAKC,KAAKC,aAA7BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAEhB,OACE,yBACEC,MAAO,CACLC,QAAS,OACTC,cAAcC,EAAAA,EAAAA,IAAO,OAGvB,gBAAC,EAAAC,EAAD,CACEC,MAAOV,EAAKW,OAAOC,gBAAgBC,gBACnCC,IAAKX,EACLE,MAAO,CACLU,aAAaP,EAAAA,EAAAA,IAAO,IACpBD,aAAc,EACdS,SAAU,GACVC,aAAc,QAEhBC,SAAU,CACRD,aAAc,SAGlB,yBACGtB,EADH,OACY,8BAASQ,GADrB,oMAG6C,IAC3C,qBACEgB,KAAI,sBAAwBf,EAAOgB,OACnCC,OAAO,SACPC,IAAI,gCAHN,UAMK,IAVP,KAWK,IACH,qBACEH,KAAI,uBAAyBf,EAAOmB,QACpCF,OAAO,SACPC,IAAI,gCAHN,WAZF,W,iGCnDCE,EAAYC,EAAAA,QAAAA,GAAAA,WAAH,2EAAGA,CAAH,wBACHjB,EAAAA,EAAAA,IAAO,IAObkB,EAAWD,EAAAA,QAAAA,MAAAA,WAAH,0EAAGA,CAAH,0EACZE,EAAAA,EAAAA,KAAM,MACC,oBAAGC,iBAAH,qBAAqD,IAAKpB,EAAAA,EAAAA,KAAQ,O,kFCelF,UAfA,YAAsE,IAAvCR,EAAsC,EAAtCA,KAAM6B,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,SAChD,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUC,MAAO/B,EAAKC,KAAKC,aAAa6B,OACxD,gBAAC,IAAD,CACEA,MAAO/B,EAAKgC,eAAeC,YAAYF,MACvCG,YAAalC,EAAKgC,eAAeC,YAAYE,SAAWnC,EAAKoC,UAE/D,0BAAKpC,EAAKgC,eAAeC,YAAYF,OACrC,uBAAKM,wBAAyB,CAAEC,OAAQtC,EAAKgC,eAAeO,QAC5D,gBAAC,IAAD,MACA,gBAAC,IAAD,CAAK3C,KAAMiC,EAAYjC","sources":["webpack://gruzhevstasy/./src/components/Bio.tsx","webpack://gruzhevstasy/./src/components/Typography.components.ts","webpack://gruzhevstasy/./src/templates/information.tsx"],"sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport { rhythm } from '../utils/typography';\n\ntype Props = {\n  slug?: string;\n};\n\nfunction Bio({ slug = '' }: Props) {\n  let done: string;\n\n  switch (slug) {\n    case 'my-music':\n      done = 'Hand-picked';\n      break;\n    case 'built-things':\n      done = 'Created & designed';\n      break;\n    case 'contact':\n      done = 'Created';\n      break;\n    default:\n      done = 'Written';\n      break;\n  }\n\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author, social } = data.site.siteMetadata;\n\n        return (\n          <aside\n            style={{\n              display: 'flex',\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <GatsbyImage\n              image={data.avatar.childImageSharp.gatsbyImageData}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 80,\n                borderRadius: '100%',\n              }}\n              imgStyle={{\n                borderRadius: '50%',\n              }}\n            />\n            <p>\n              {done} by <strong>{author}</strong>, a senior developer with diversified experience in different\n              domains who lives and works in Europe building nice things. On this blog I post not only\n              programming stuff. You can also find me on{' '}\n              <a\n                href={`https://github.com/${social.github}`}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                GitHub\n              </a>{' '}\n              or{' '}\n              <a\n                href={`https://twitter.com/${social.twitter}`}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                Twitter\n              </a>\n              .\n            </p>\n          </aside>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 80, height: 80, layout: FIXED)\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import styled from 'styled-components';\nimport { rhythm, scale } from '../utils/typography';\n\nexport const Separator = styled.hr`\n  margin-bottom: ${rhythm(1)};\n`;\n\ntype DateTextProps = {\n  respectTopMargin?: boolean;\n};\n\nexport const DateText = styled.small<DateTextProps>`\n  ${{ ...scale(-1 / 5) }};\n  margin-top: ${({ respectTopMargin = true }) => (respectTopMargin ? '' : rhythm(-1))};\n  font-style: italic;\n  display: block;\n`;\n","import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport { Separator } from '../components/Typography.components';\n\ntype Props = PageProps & {\n  data: any;\n  pageContext: any;\n};\n\nfunction InformationTemplate({ data, pageContext, location }: Props) {\n  return (\n    <Layout location={location} title={data.site.siteMetadata.title}>\n      <SEO\n        title={data.markdownRemark.frontmatter.title}\n        description={data.markdownRemark.frontmatter.summary || data.excerpt}\n      />\n      <h1>{data.markdownRemark.frontmatter.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      <Separator />\n      <Bio slug={pageContext.slug} />\n    </Layout>\n  );\n}\n\nexport default InformationTemplate;\n\nexport const informationQuery = graphql`\n  query InformationBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 300)\n      frontmatter {\n        title\n        summary\n      }\n    }\n  }\n`;\n"],"names":["bioQuery","done","slug","StaticQuery","query","render","data","site","siteMetadata","author","social","style","display","marginBottom","rhythm","G","image","avatar","childImageSharp","gatsbyImageData","alt","marginRight","minWidth","borderRadius","imgStyle","href","github","target","rel","twitter","Separator","styled","DateText","scale","respectTopMargin","pageContext","location","title","markdownRemark","frontmatter","description","summary","excerpt","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}