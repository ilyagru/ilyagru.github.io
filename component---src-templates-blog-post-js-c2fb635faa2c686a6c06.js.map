{"version":3,"sources":["webpack:///./src/components/Typography.components.js","webpack:///./src/components/Bio.js","webpack:///./src/templates/blog-post.js"],"names":["Separator","styled","hr","rhythm","Date","small","scale","respectTopMargin","Bio","done","slug","query","bioQuery","render","data","site","siteMetadata","author","social","style","display","marginBottom","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","github","target","rel","twitter","defaultProps","BlogPostTemplate","post","this","props","markdownRemark","siteTitle","title","pageContext","previous","next","twitterShareUrl","encodeURIComponent","frontmatter","location","metaImage","featuredImage","siteUrl","src","description","summary","excerpt","image","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","React","Component","blogPostQuery"],"mappings":"6FAAA,gGAGaA,EAAYC,IAAOC,GAAV,kFAAGD,CAAH,uBACHE,YAAO,IAGbC,EAAOH,IAAOI,MAAV,6EAAGJ,CAAH,yEACRK,aAAM,MACC,oBAAGC,iBAAH,qBAAqD,GAAKJ,aAAQ,O,kCCTlF,sEAOA,SAASK,EAAT,GAAwB,IAClBC,EACJ,OAFqB,EAARC,MAGX,IAAK,WACHD,EAAO,cACP,MACF,IAAK,eACHA,EAAO,qBACP,MACF,IAAK,UACHA,EAAO,UACP,MACF,QACEA,EAAO,UAIX,OACE,kBAAC,cAAD,CACEE,MAAOC,EACPC,OAAQ,SAACC,GAAU,IAAD,EACWA,EAAKC,KAAKC,aAA7BC,EADQ,EACRA,OAAQC,EADA,EACAA,OAEhB,OACE,2BACEC,MAAO,CACLC,QAAQ,OACRC,aAAclB,YAAO,OAGvB,kBAAC,IAAD,CACEmB,MAAOR,EAAKS,OAAOC,gBAAgBF,MACnCG,IAAKR,EACLE,MAAO,CACLO,YAAavB,YAAO,IACpBkB,aAAc,EACdM,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,2BACGnB,EADH,OACY,gCAASQ,GADrB,4JAIE,uBACEa,KAAI,sBAAwBZ,EAAOa,OACnCC,OAAO,SACPC,IAAI,gCAHN,UAMK,IAVP,KAWK,IACH,uBACEH,KAAI,uBAAyBZ,EAAOgB,QACpCF,OAAO,SACPC,IAAI,gCAHN,WAZF,SA4BZzB,EAAI2B,aAAe,CACjBzB,KAAM,IAOR,IAAME,EAAQ,YAqBCJ,O,wLCnGT4B,E,kGACJvB,OAAA,WACE,IAAMwB,EAAOC,KAAKC,MAAMzB,KAAK0B,eACvBC,EAAYH,KAAKC,MAAMzB,KAAKC,KAAKC,aAAa0B,MAC9CzB,EAASqB,KAAKC,MAAMzB,KAAKC,KAAKC,aAAaC,OAH1C,EAIoBqB,KAAKC,MAAMI,YAA9BC,EAJD,EAICA,SAAUC,EAJX,EAIWA,KACZC,EACJ,yCACAC,mBAAsBV,EAAKW,YAAYN,MAArB,OAAiCzB,EAAjC,IAA2CqB,KAAKC,MAAMU,SAASnB,MAE7EoB,EAAYb,EAAKW,YAAYG,cAAjB,GACXb,KAAKC,MAAMzB,KAAKC,KAAKC,aAAaoC,QAAUf,EAAKW,YAAYG,cAAc3B,gBAAgBF,MAAM+B,IACpG,GAEJ,OACE,kBAAC,IAAD,CAAQJ,SAAUX,KAAKC,MAAMU,SAAUP,MAAOD,GAC5C,kBAAC,IAAD,CACEC,MAAOL,EAAKW,YAAYN,MACxBY,YAAajB,EAAKW,YAAYO,SAAWlB,EAAKmB,QAC9CC,MAAOP,IAET,iCACE,4BAAKb,EAAKW,YAAYN,OACtB,kBAAC,IAAD,CAAMnC,kBAAkB,GAAQ8B,EAAKW,YAAYU,MACjD,yBAAKC,wBAAyB,CAAEC,OAAQvB,EAAKwB,SAE/C,6BACA,2BACE,uBAAG/B,KAAMgB,EAAiBd,OAAO,SAASC,IAAI,gCAA9C,cAGC,MACD,uBAAGH,KAvBgB,yEAuBQE,OAAO,SAASC,IAAI,gCAA/C,qBAIF,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,wBACEd,MAAO,CACLC,QAAQ,OACR0C,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGrB,GACC,kBAAC,OAAD,CAAMsB,GAAE,IAAMtB,EAASuB,OAAOzD,KAAQuB,IAAI,QAA1C,KACKW,EAASI,YAAYN,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMqB,GAAE,IAAMrB,EAAKsB,OAAOzD,KAAQuB,IAAI,QACnCY,EAAKG,YAAYN,MADpB,U,GAxDiB0B,IAAMC,WAmEtBjC,YAER,IAAMkC,EAAa","file":"component---src-templates-blog-post-js-c2fb635faa2c686a6c06.js","sourcesContent":["import styled from 'styled-components';\nimport { rhythm, scale } from '../utils/typography';\n\nexport const Separator = styled.hr`\n  margin-bottom: ${rhythm(1)};\n`;\n\nexport const Date = styled.small`\n  ${{ ...scale(-1 / 5) }};\n  margin-top: ${({ respectTopMargin = true }) => (respectTopMargin ? '' : rhythm(-1))};\n  font-style: italic;\n  display: block;\n`;\n","import React from 'react';\nimport PT from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../utils/typography';\n\nfunction Bio({ slug }) {\n  let done;\n  switch (slug) {\n    case 'my-music':\n      done = 'Hand-picked';\n      break;\n    case 'built-things':\n      done = 'Created & designed';\n      break;\n    case 'contact':\n      done = 'Created';\n      break;\n    default:\n      done = 'Written';\n      break;\n  }\n\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author, social } = data.site.siteMetadata;\n\n        return (\n          <aside\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 80,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              {done} by <strong>{author}</strong>, a diversified developer who lives and works in Europe\n              building nice things. On this blog I post not only programming stuff. You can also find me on\n              {` `}\n              <a\n                href={`https://github.com/${social.github}`}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                GitHub\n              </a>{' '}\n              or{' '}\n              <a\n                href={`https://twitter.com/${social.twitter}`}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                Twitter\n              </a>\n              .\n            </p>\n          </aside>\n        );\n      }}\n    />\n  );\n}\n\nBio.defaultProps = {\n  slug: '',\n};\n\nBio.propTypes = {\n  slug: PT.string,\n};\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 80, height: 80) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport { Date, Separator } from '../components/Typography.components';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const author = this.props.data.site.siteMetadata.author;\n    const { previous, next } = this.props.pageContext;\n    const twitterShareUrl =\n      'https://twitter.com/intent/tweet?text=' +\n      encodeURIComponent(`${post.frontmatter.title} by ${author} ${this.props.location.href}`);\n    const reportMistakeUrl = 'https://github.com/ilyagru/ilyagru.github.io/issues/new?labels=mistake';\n    const metaImage = post.frontmatter.featuredImage\n      ? `${this.props.data.site.siteMetadata.siteUrl}${post.frontmatter.featuredImage.childImageSharp.fixed.src}`\n      : '';\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.summary || post.excerpt}\n          image={metaImage}\n        />\n        <article>\n          <h1>{post.frontmatter.title}</h1>\n          <Date respectTopMargin={false}>{post.frontmatter.date}</Date>\n          <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        </article>\n        <br />\n        <p>\n          <a href={twitterShareUrl} target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n            Tweet this\n          </a>\n          {' | '}\n          <a href={reportMistakeUrl} target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n            Report a mistake\n          </a>\n        </p>\n        <Separator />\n        <Bio />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={`/${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const blogPostQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 300)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        summary\n        featuredImage {\n          childImageSharp {\n            fixed(width: 1200, height: 630) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}