{"version":3,"sources":["webpack:///./src/components/Typography.components.js","webpack:///./src/pages/index.js","webpack:///./src/components/Bio.js"],"names":["Separator","styled","hr","rhythm","Date","small","scale","respectTopMargin","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","keywords","map","node","frontmatter","fields","slug","key","style","marginBottom","boxShadow","to","date","dangerouslySetInnerHTML","__html","summary","excerpt","React","Component","indexQuery","Bio","done","query","bioQuery","author","social","display","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","imgStyle","href","github","target","rel","twitter","defaultProps"],"mappings":"6FAAA,gGAGaA,EAAYC,IAAOC,GAAV,kFAAGD,CAAH,uBACHE,YAAO,IAGbC,EAAOH,IAAOI,MAAV,6EAAGJ,CAAH,yEACRK,aAAM,MACC,oBAAGC,iBAAH,qBAAqD,GAAKJ,aAAQ,O,iMCA5EK,E,kGACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAM,YACNK,SAAU,CAAC,OAAD,+EAYZ,kBAAC,IAAD,MACCJ,EAAMK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,wBAAIE,MAAO,CAAEC,aAAc1B,YAAO,EAAI,KACpC,kBAAC,OAAD,CAAMyB,MAAO,CAAEE,UAAU,QAAWC,GAAE,IAAMR,EAAKE,OAAOC,MACrDV,IAGL,kBAAC,IAAD,KAAOO,EAAKC,YAAYQ,MACxB,uBAAGC,wBAAyB,CAAEC,OAAQX,EAAKC,YAAYW,SAAWZ,EAAKa,iB,GAlC7DC,IAAMC,WA2Cf9B,YAER,IAAM+B,EAAU,c,kCCtDvB,sEAOA,SAASC,EAAT,GAAwB,IAClBC,EACJ,OAFqB,EAARf,MAGX,IAAK,WACHe,EAAO,cACP,MACF,IAAK,eACHA,EAAO,qBACP,MACF,IAAK,UACHA,EAAO,UACP,MACF,QACEA,EAAO,UAIX,OACE,kBAAC,cAAD,CACEC,MAAOC,EACPlC,OAAQ,SAACC,GAAU,IAAD,EACWA,EAAKI,KAAKC,aAA7B6B,EADQ,EACRA,OAAQC,EADA,EACAA,OAEhB,OACE,2BACEjB,MAAO,CACLkB,QAAQ,OACRjB,aAAc1B,YAAO,OAGvB,kBAAC,IAAD,CACE4C,MAAOrC,EAAKsC,OAAOC,gBAAgBF,MACnCG,IAAKN,EACLhB,MAAO,CACLuB,YAAahD,YAAO,IACpB0B,aAAc,EACduB,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,2BACGZ,EADH,OACY,gCAASG,GADrB,4JAIE,uBACEW,KAAI,sBAAwBV,EAAOW,OACnCC,OAAO,SACPC,IAAI,gCAHN,UAMK,IAVP,KAWK,IACH,uBACEH,KAAI,uBAAyBV,EAAOc,QACpCF,OAAO,SACPC,IAAI,gCAHN,WAZF,SA4BZlB,EAAIoB,aAAe,CACjBlC,KAAM,IAOR,IAAMiB,EAAQ,YAqBCH","file":"component---src-pages-index-js-f2305736e7f0cd1dd75a.js","sourcesContent":["import styled from 'styled-components';\nimport { rhythm, scale } from '../utils/typography';\n\nexport const Separator = styled.hr`\n  margin-bottom: ${rhythm(1)};\n`;\n\nexport const Date = styled.small`\n  ${{ ...scale(-1 / 5) }};\n  margin-top: ${({ respectTopMargin = true }) => (respectTopMargin ? '' : rhythm(-1))};\n  font-style: italic;\n  display: block;\n`;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport { Date } from '../components/Typography.components';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[\n            `blog`,\n            `frontend`,\n            `javascript`,\n            `react`,\n            `swift`,\n            `ios`,\n            `life`,\n            `development`,\n            `design`,\n          ]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n\n          return (\n            <article key={node.fields.slug}>\n              <h3 style={{ marginBottom: rhythm(1 / 4) }}>\n                <Link style={{ boxShadow: `none` }} to={`/${node.fields.slug}`}>\n                  {title}\n                </Link>\n              </h3>\n              <Date>{node.frontmatter.date}</Date>\n              <p dangerouslySetInnerHTML={{ __html: node.frontmatter.summary || node.excerpt }} />\n            </article>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const indexQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { source: { eq: \"blog\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            summary\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PT from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../utils/typography';\n\nfunction Bio({ slug }) {\n  let done;\n  switch (slug) {\n    case 'my-music':\n      done = 'Hand-picked';\n      break;\n    case 'built-things':\n      done = 'Created & designed';\n      break;\n    case 'contact':\n      done = 'Created';\n      break;\n    default:\n      done = 'Written';\n      break;\n  }\n\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author, social } = data.site.siteMetadata;\n\n        return (\n          <aside\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 80,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              {done} by <strong>{author}</strong>, a diversified developer who lives and works in Europe\n              building nice things. On this blog I post not only programming stuff. You can also find me on\n              {` `}\n              <a\n                href={`https://github.com/${social.github}`}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                GitHub\n              </a>{' '}\n              or{' '}\n              <a\n                href={`https://twitter.com/${social.twitter}`}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                Twitter\n              </a>\n              .\n            </p>\n          </aside>\n        );\n      }}\n    />\n  );\n}\n\nBio.defaultProps = {\n  slug: '',\n};\n\nBio.propTypes = {\n  slug: PT.string,\n};\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 80, height: 80) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n"],"sourceRoot":""}