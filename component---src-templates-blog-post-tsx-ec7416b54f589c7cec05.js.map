{"version":3,"file":"component---src-templates-blog-post-tsx-ec7416b54f589c7cec05.js","mappings":"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","sources":["webpack://ilyagru/./src/components/Bio.tsx","webpack://ilyagru/./src/components/Typography.components.ts","webpack://ilyagru/./src/templates/blog-post.tsx"],"sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport { rhythm } from '../utils/typography';\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 80, height: 80, layout: FIXED)\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n          twitter\n        }\n      }\n    }\n  }\n`;\n\ntype Props = {\n  slug?: string;\n};\n\nfunction Bio({ slug = '' }: Props) {\n  let done: string;\n\n  switch (slug) {\n    case 'my-music':\n      done = 'Hand-picked';\n      break;\n    case 'built-things':\n      done = 'Created & designed';\n      break;\n    case 'contact':\n      done = 'Created';\n      break;\n    default:\n      done = 'Written';\n      break;\n  }\n\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author, social } = data.site.siteMetadata;\n\n        return (\n          <aside\n            style={{\n              display: 'flex',\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <GatsbyImage\n              image={data.avatar.childImageSharp.gatsbyImageData}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 80,\n                borderRadius: '100%',\n              }}\n              imgStyle={{\n                borderRadius: '50%',\n              }}\n            />\n            <p>\n              {done} by <strong>{author}</strong>, a senior developer with diversified experience in different\n              domains who lives and works in Europe building nice things. On this blog I post not only\n              programming stuff. You can also find me on{' '}\n              <a\n                href={`https://github.com/${social.github}`}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                GitHub\n              </a>{' '}\n              or{' '}\n              <a\n                href={`https://twitter.com/${social.twitter}`}\n                target=\"_blank\"\n                rel=\"nofollow noopener noreferrer\"\n              >\n                Twitter\n              </a>\n              .\n            </p>\n          </aside>\n        );\n      }}\n    />\n  );\n}\n\nexport default Bio;\n","import styled from 'styled-components';\nimport { rhythm, scale } from '../utils/typography';\n\nexport const Separator = styled.hr`\n  margin-bottom: ${rhythm(1)};\n`;\n\ntype DateTextProps = {\n  respectTopMargin?: boolean;\n};\n\nexport const DateText = styled.small<DateTextProps>`\n  ${{ ...scale(-1 / 5) }};\n  margin-top: ${({ respectTopMargin = true }) => (respectTopMargin ? '' : rhythm(-1))};\n  font-style: italic;\n  display: block;\n`;\n","import React from 'react';\nimport { Link, graphql, PageProps } from 'gatsby';\n\nimport { getSrc } from 'gatsby-plugin-image';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport { DateText, Separator } from '../components/Typography.components';\n\ntype Props = PageProps & {\n  data: any;\n  pageContext: any;\n};\n\nfunction BlogPostTemplate({ data, pageContext, location }: Props) {\n  const twitterShareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(\n    `${data.markdownRemark.frontmatter.title} by ${data.site.siteMetadata.author} ${location.href}`\n  )}`;\n  const reportMistakeUrl = 'https://github.com/ilyagru/ilyagru.github.io/issues/new?labels=mistake';\n\n  const metaImage = data.markdownRemark.frontmatter.featuredImage\n    ? getSrc(data.markdownRemark.frontmatter.featuredImage.childImageSharp.gatsbyImageData)\n    : '';\n\n  return (\n    <Layout location={location} title={data.site.siteMetadata.title}>\n      <SEO\n        title={data.markdownRemark.frontmatter.title}\n        description={data.markdownRemark.frontmatter.summary || data.markdownRemark.excerpt}\n        image={metaImage}\n      />\n      <article>\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\n        <DateText respectTopMargin={false}>{data.markdownRemark.frontmatter.date}</DateText>\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      </article>\n      <br />\n      <p>\n        <a href={twitterShareUrl} target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n          Tweet this\n        </a>\n        {' | '}\n        <a href={reportMistakeUrl} target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n          Report a mistake\n        </a>\n      </p>\n      <Separator />\n      <Bio />\n      <ul\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between',\n          listStyle: 'none',\n          padding: 0,\n        }}\n      >\n        <li>\n          {pageContext.previous && (\n            <Link to={`/${pageContext.previous.fields.slug}`} rel=\"prev\">\n              ← {pageContext.previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {pageContext.next && (\n            <Link to={`/${pageContext.next.fields.slug}`} rel=\"next\">\n              {pageContext.next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </Layout>\n  );\n}\n\nexport default BlogPostTemplate;\n\nexport const blogPostQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 300)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        summary\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(width: 1200, height: 630, layout: FIXED)\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["done","slug","React","StaticQuery","query","render","data","site","siteMetadata","author","social","style","display","marginBottom","rhythm","GatsbyImage","image","avatar","childImageSharp","gatsbyImageData","alt","marginRight","minWidth","borderRadius","imgStyle","href","github","target","rel","twitter","Separator","styled","DateText","Object","scale","respectTopMargin","pageContext","location","twitterShareUrl","encodeURIComponent","markdownRemark","frontmatter","title","metaImage","featuredImage","getSrc","Layout","SEO","description","summary","excerpt","date","dangerouslySetInnerHTML","__html","html","Bio","flexWrap","justifyContent","listStyle","padding","previous","Link","to","fields","next"],"sourceRoot":""}